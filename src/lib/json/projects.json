{
  "projects": {
    "web": [
      {
        "id": "bella_sekai",
        "type": "web",
        "color": "Honami",
        "title": "Bella Sekai",
        "short_desc": "My website for selling digital products",
        "description": "Bella Sekai is an automated digital product delivery platform that I built to streamline my business operations. The website handles everything from purchase to delivery, allowing me to focus on creating new products and improving user experience.\n\nKey Features:\n- Automated digital product delivery\n- Secure payment processing\n- User-friendly interface\n- Order tracking system\n\nThe website is continuously updated with new features and improvements to enhance the shopping experience.",
        "tags": "sveltekit, pocketbase, tailwind css",
        "link": "https://game.bellasekai.com",
        "icon": "",
        "preview": [],
        "video": "https://game.bellasekai.com",
        "finished": "2024-08-22",
        "last_updated": "2024-10-22",
        "on_live": true
      },
      {
        "id": "flashcard",
        "type": "web",
        "color": "Saki",
        "title": "Flashcard",
        "short_desc": "For my aunt's English teaching needs",
        "description": "I created for my aunt's English teaching needs. A modern flashcard web application designed to make English language learning more engaging and effective.\n\nKey Features:\n- Easy-to-use card creation and management\n\nThe application helps users build vocabulary, improve pronunciation, and master grammar through interactive practice sessions. Perfect for both self-study and classroom use.",
        "tags": "sveltekit, pocketbase, daisyui, tailwind css",
        "link": "https://flashcard.bellasekai.com",
        "icon": "",
        "preview": [],
        "video": "https://flashcard.bellasekai.com",
        "finished": "2023-12-20",
        "last_updated": "2024-01-15",
        "on_live": true
      },
      {
        "id": "schedule_emloyees",
        "type": "web",
        "color": "Nene",
        "title": "Schedule Employees",
        "short_desc": "Scheduled employees' work hours for multi-restaurant",
        "description": "A comprehensive employee scheduling system designed for multi-restaurant management. This application streamlines workforce planning and management through an intuitive interface and powerful features.\n\nKey Features:\n\nScheduling & Planning:\n- Position-based employee scheduling\n- Interactive drag-and-drop schedule board\n- Conflict detection and prevention\n- Real-time schedule updates\n\nEmployee Management:\n- Detailed employee information tracking\n- Contract management system\n- Day-off request handling\n- Attendance tracking and reporting\n\nMulti-Restaurant Support:\n- Role-based access control (RBAC)\n- Restaurant-specific dashboards\n- Customizable settings per location\n- Cross-restaurant employee management\n\nReporting & Analytics:\n- Weekly and monthly schedule reports\n- Labor cost analysis\n- Employee attendance reports\n- Custom report generation\n- Export functionality in multiple formats\n\nThe system is built with security and scalability in mind, utilizing Spring Boot and Keycloak for robust authentication and authorization. The modern tech stack ensures reliability and maintainability, while Docker containerization enables easy deployment and scaling.",
        "tags": "java, spring boot, thymeleaf, bootstrap, htmx, postgresql, keycloak, docker",
        "link": "",
        "icon": "",
        "preview": ["se_1_TsfuBWpInj.png", "se_2_72mGcRK63d.png"],
        "video": "",
        "finished": "2024-03-17",
        "last_updated": "2024-10-12",
        "on_live": false
      },
      {
        "id": "twitter_alarm",
        "type": "web",
        "color": "Ichika",
        "title": "Twitter Alarm",
        "short_desc": "Alerted words, hashtags that you want to follow on Twitter",
        "description": "Twitter Alarm is a group project developed by a team of four students during our third year of Computer Science studies at the University of Caen Normandy (Universit√© de Caen Normandie). This real-time monitoring tool keeps users informed about specific Twitter content through email notifications, eliminating the need for constant Twitter checking by automatically alerting users when their tracked keywords or hashtags appear.\n\nKey Features:\n- Custom keyword and hashtag tracking\n- Real-time tweet display for each tracked term\n- Latest tweet preview on dashboard\n- Email notifications for matched tweets\n- Easy-to-use dashboard for managing tracked terms\n- Simple search configuration\n\nUse Cases:\n- Brand and product mentions monitoring\n- Event hashtag tracking\n- News and trend watching\n- Competition analysis\n- Community engagement tracking\n\nTechnical Highlights:\n- Integration with Twitter API for real-time data\n- Live tweet display system\n- Email notification system\n- Responsive React-based interface\n- Secure data storage in MongoDB\n- RESTful API architecture with Express.js\n- Clean and modern UI with Tailwind CSS",
        "tags": "react, tailwind css, express.js, mongodb",
        "link": "https://github.com/Finn-Vee-Axel-Mat/twitter-alarm",
        "icon": "",
        "preview": ["ta_1_x8OlWEekO0.png", "ta_2_P8nANFf6np.png"],
        "video": "https://drive.google.com/file/d/1_SOVTC7mPovOC_uM5I2-LCKJpr5ihcvn/preview",
        "finished": "2022-03-21",
        "last_updated": "2022-03-21",
        "on_live": false
      }
    ],
    "game": [
      {
        "id": "rogue_like",
        "type": "game",
        "color": "Mafuyu",
        "title": "Console Rogue-like",
        "short_desc": "An object-oriented C++ turn-based dungeon crawler featuring strategic combat and procedural level generation",
        "description": "Developed as part of the Master's Program in Game Development at Gaming Campus, this project showcases advanced object-oriented programming principles in C++. Created by a dedicated team of two students, the game demonstrates practical application of design patterns and software architecture in game development.\n\nCore Features:\n- Turn-based tactical combat system with strategic positioning\n- Procedurally generated dungeon rooms offering unique challenges each playthrough\n- Advanced enemy AI behavior patterns utilizing inheritance and polymorphism\n- Robust character progression system with various abilities and stats\n- Memory-efficient ASCII-based graphics engine for Windows console\n\nPlayers navigate their hero through interconnected dungeon rooms, each presenting distinct combat scenarios. The game emphasizes tactical decision-making, requiring players to carefully consider positioning and timing of actions. Enemy behaviors are governed by sophisticated AI patterns, creating engaging and challenging encounters.\n\nThe project demonstrates mastery of C++ OOP concepts including inheritance, polymorphism, encapsulation, and template programming, while maintaining clean, maintainable code architecture suitable for future expansions.\n\nDeveloped over one semester, this project showcases both technical programming expertise and game design principles, resulting in an engaging console-based gaming experience.",
        "tags": "c++, console, oop, turn-based-strategy, academic-project, collaborative-development",
        "link": "https://github.com/Cesca19/RogueLikeGame",
        "icon": "",
        "preview": [],
        "video": "",
        "finished": "2024-09-20",
        "last_updated": "2024-09-20",
        "on_live": false
      },
      {
        "id": "outbreak",
        "type": "game",
        "color": "MEIKO",
        "title": "Outbreak: Endless Runner",
        "short_desc": "A fast-paced FPS endless runner developed in Unreal Engine 5, combining survival horror with arcade-style gameplay",
        "description": "Developed during my third year of Computer Science (Game Development Option) at Gaming Campus, Outbreak is an intense first-person shooter that merges endless runner mechanics with survival horror elements. This project was completed in two weeks as part of the Unreal Engine 5 course, showcasing both C++ programming expertise and game development skills.\n\nCore Features:\n- Dynamic first-person shooter mechanics implemented in C++\n- Procedurally generated endless running environment\n- Strategic pickup system including weapons, ammo, and power-ups\n- Dynamic obstacle system creating challenging pathways\n\nGameplay Elements:\n- Fast-paced combat requiring quick reflexes and strategic thinking\n- Dynamic obstacles requiring precise timing to navigate\n  - Hazardous terrain elements that can damage or slow the player\n  - Tight corridors and jumping sequences testing player agility\n  - Weapons with unique characteristics\n  - Damage boosters for increased firepower\n  - Armor upgrades for better survival chances\n  - Ammunition pickups to maintain combat readiness\n- Aggressive enemy AI that actively pursues and engages the player\n- Score system based on survival time, obstacles cleared, and enemies defeated\n\nTechnical Implementation:\n- Custom C++ character controller for smooth FPS movement\n- Blueprint-enhanced weapon system for flexible gameplay mechanics\n- Optimized spawning system for enemies, obstacles, and pickups\n- Physics-based obstacle interactions and collision systems\n\nThe game challenges players to survive as long as possible while navigating treacherous obstacles and fighting through waves of pursuing monsters. Success requires mastering both environmental navigation and combat skills, while managing resources strategically.",
        "tags": "ue5, c++, blueprint, fps, endless-runner, academic-project",
        "link": "https://github.com/bellavee/outbreak_ue5cpp",
        "icon": "",
        "preview": [],
        "video": "https://drive.google.com/file/d/1sRH-x77rQw1dSZtipbTjHYsWLLp-M00q/preview",
        "finished": "2024-02-05",
        "last_updated": "2024-02-06",
        "on_live": false
      },
      {
        "id": "tower_attack",
        "type": "game",
        "color": "KAITO",
        "title": "Tower Attack: Shaders",
        "short_desc": "A visually stunning tower defense prototype showcasing advanced shader techniques and material effects in Unreal Engine 5",
        "description": "Developed as part of a third-year Bachelor's program shader study project at Gaming Campus, Tower Attack demonstrates advanced material creation and visual effects capabilities in Unreal Engine 5. This collaborative project, completed by a team of four students, serves as a technical showcase for various shader programming techniques and environmental effects.\n\nVisual Technical Features:\n- Advanced Material Systems:\n  - Custom normal map implementation for realistic surface deformation\n  - Dynamic cracking effect shaders with procedural animations\n  - Interactive material instances with parameter-driven variations\n  - Custom texture mapping techniques for enhanced surface detail\n\n- Environmental Effects:\n  - Dreamlike atmosphere creation through advanced lighting techniques\n  - Custom skybox implementation with dynamic time of day\n  - Sophisticated post-process effects for enhanced visual quality\n  - Niagara particle systems for dynamic visual feedback\n\n- Technical Shader Implementation:\n  - Material function library for reusable shader components\n  - Dynamic texture generation and manipulation\n\nGameplay Elements:\n- Tower defense mechanics in a visually rich environment\n- Strategic enemy wave management",
        "tags": "ue5, blueprint, shaders, materials, particle-effects, lighting, post-processing, academic-project, collaborative-development",
        "link": "https://github.com/Cesca19/ShadersProject",
        "icon": "",
        "preview": [],
        "video": "https://drive.google.com/file/d/1qOjdPGvJsl8xCMskaPqXQl-NFLOiwuJr/preview",
        "finished": "2024-02-16",
        "last_updated": "2024-02-16",
        "on_live": false
      },
      {
        "id": "hoyomaidre",
        "type": "game",
        "color": "RIN",
        "title": "Hoyomaidre: VR Game",
        "short_desc": "An immersive VR escape room experience featuring four unique physics-based puzzles and interactive environments",
        "description": "Developed as part of the Virtual Reality course in the third year at Gaming Campus, Hoyomaidre is an innovative VR puzzle game created by a team of four students. The project focuses on delivering engaging, physically interactive puzzles while maintaining intuitive VR mechanics and comfortable player experience.\n\nDesign Philosophy:\n- Focus on intuitive VR interactions\n- Emphasis on physical presence and immersion\n- Balanced puzzle difficulty for engaging gameplay\n- Minimized motion sickness through careful design\n\nThe game challenges players to solve interconnected puzzles using VR-specific interactions, creating a unique and immersive escape room experience. Each puzzle room offers distinct challenges that take advantage of VR's unique capabilities, requiring players to think creatively and interact naturally with their virtual environment.",
        "tags": "unity, c#, vr, 3d, puzzle, escape-room, physics-based, academic-project, collaborative-development, oculus",
        "link": "https://github.com/FreezeKaz/HoyoMairde",
        "icon": "",
        "preview": [],
        "video": "https://drive.google.com/file/d/1dG1Qu6Uk02iAy-uu2fC-2p30eqKRxZ2A/preview",
        "finished": "2024-03-15",
        "last_updated": "2024-03-15",
        "on_live": false
      },
      {
        "id": "dungeon_explorer",
        "type": "game",
        "color": "Akito",
        "title": "Dungeon Explorer",
        "short_desc": "A 2D top-down dungeon shooter showcasing advanced AI behavior implementations through state machines and behavior trees",
        "description": "Developed as part of the AI courses in the third year at Gaming Campus, Dungeon Explorer demonstrates practical applications of artificial intelligence in game development. This top-down 2D shooter combines pixel art aesthetics with sophisticated enemy behavior systems.\n\nAI Implementation:\n  - Finite State Machine (FSM) for basic enemy types\n  - Advanced Behavior Trees for complex enemy patterns\n\nVisual Design:\n  - Dynamic lighting system with torch effects\n  - Pixel art visual style\n  - Particle effects for combat feedback\n  - Mood-setting environmental details\n\nGameplay Elements:\n- Two carefully designed levels with increasing complexity\n- Strategic combat requiring player skill and tactics\n- Boss battle featuring complex AI patterns\n- Health and resource management\n\nThis project demonstrates the practical application of AI concepts in game development, combining engaging gameplay with sophisticated enemy behaviors to create a challenging dungeon exploration experience.",
        "tags": "unity, c#, 2d, ai, state-machine, behavior-tree, pixel-art, dungeon-crawler, top-down-shooter, academic-project",
        "link": "https://github.com/Red-H-Star/ProjectAI",
        "icon": "",
        "preview": ["dg_1_R5FiCsrvjL.jpg", "dg_2_QBgmib8NjK.jpg"],
        "video": "https://drive.google.com/file/d/1sjI4GDjENk_8sGZwPPnm6cyqcjW5qOXJ/preview",
        "finished": "2023-12-22",
        "last_updated": "2023-12-22",
        "on_live": false
      },
      {
        "id": "grid_combat",
        "type": "game",
        "color": "Shiho",
        "title": "Strategy Grid Combat",
        "short_desc": "Tactical grid combat game where players battle to be the last survivor",
        "description": "Strategic Grid Combat is a tactical battle game played on a customizable battlefield. Players compete on a square grid ranging from 10x10 to 20x20 cells, navigating through a terrain filled with walls, shield power-ups, bombs, and mines.\n\nEach player enters the arena equipped with their own health points and a weapon that has specific range and damage capabilities. Players must think strategically as they move horizontally and vertically across the grid, using the environment to their advantage while avoiding hazards.\n\nThe game continues until only one player remains on the battlefield, making them the victor. This simple yet engaging format creates intense tactical gameplay where positioning, resource management, and combat strategy are key to survival.\n\nThe core challenge lies in outmaneuvering opponents while managing the threats and opportunities presented by the various elements scattered across the grid. Players must decide when to engage in combat, when to seek power-ups, and how to best use the terrain to their advantage.",
        "tags": "java, java swing",
        "link": "https://github.com/bellavee/jeu-strategie",
        "icon": "",
        "preview": ["preview_project_3_6wOi36HkEj.png", "preview_project_4_0TqdKbkGWf.png"],
        "video": "",
        "finished": "2021-12-09",
        "last_updated": "2021-12-09",
        "on_live": false
      },
      {
        "id": "ricochet_robots",
        "type": "game",
        "color": "Ena",
        "title": "Ricochet Robots",
        "short_desc": "A Java implementation of the classic Ricochet Robots board game featuring A* pathfinding algorithm",
        "description": "Ricochet Robots is a digital adaptation of the popular puzzle board game, developed in Java using Swing for the graphical interface. This project showcases the implementation of advanced pathfinding algorithms and puzzle mechanics in a clean, user-friendly interface.\n\nCore Features:\n  - Accurate recreation of the original Ricochet Robots ruleset\n - Multiple robot characters with distinct movement patterns\n  - Goal-based puzzle objectives\n\nTechnical Implementation:\n  - A* algorithm implementation for optimal solution finding\n  - Custom heuristic functions for movement calculation\n  - Collision detection and wall bouncing mechanics\n  - Path visualization and movement preview\n\nUser Interface:\n  - Clean, intuitive Java Swing interface\n  - Real-time movement visualization\n  - Move counter and solution tracking\n  - Interactive robot selection and control\n\nThis project demonstrates practical application of computer science concepts including pathfinding algorithms, user interface design, and game state management while providing an engaging puzzle-solving experience.",
        "tags": "java, java swing, a* algorithm, pathfinding, puzzle-game, board-game, algorithm-implementation, desktop-application",
        "link": "https://github.com/bellavee/ricochet-robots",
        "icon": "",
        "preview": ["152659298_bdd9d922_1acc_44f2_b766_6e61fd463483_ThfQ2iLGL5.png", "152659301_c5ef691e_0139_4950_81d4_00032de9ea96_QRfDnZJCbS.png"],
        "video": "",
        "finished": "2021-04-30",
        "last_updated": "2021-04-30",
        "on_live": false
      },
      {
        "id": "pypuzzle",
        "type": "game",
        "color": "Ichika",
        "title": "PyPuzzle",
        "short_desc": "A colorful block-matching puzzle game with single and multiplayer modes",
        "description": "PyPuzzle is a Python-based puzzle game developed using Pygame that features both solo and multiplayer gameplay modes. The game combines classic block-matching mechanics with competitive elements.\n\nKey Features:\n- Solo and multiplayer game modes\n- Score tracking system with AI comparison\n- Colorful block combinations and patterns\n- Clean, minimalist interface with blue theme\n- Grid-based puzzle mechanics\n- Real-time score display\n- Simple menu navigation\n\nThe game challenges players to achieve high scores through strategic block matching while competing against AI or other players in a modern, streamlined interface.",
        "tags": "python, pygame, puzzle-game, multiplayer, block-matching, tetris-like",
        "link": "https://github.com/bellavee/block-puzzle",
        "icon": "",
        "preview": ["preview_project_nGWsSDcAA0.png"],
        "video": "",
        "finished": "2020-04-24",
        "last_updated": "2020-04-24",
        "on_live": false
      }
    ],
    "tool": [
      {
        "id": "message_hider",
        "type": "tool",
        "color": "Rui",
        "title": "Message Hider",
        "short_desc": "A window application to hide nessage with steganography",
        "description": "Message Hider is a collaborative project developed during the Advanced C++ course in the Master's Program at Gaming Campus by a team of three students.\n\nThis Windows application enables users to conceal and extract secret messages within images through pixel-bit manipulation. Using the Win32 and GDI APIs for image loading and display, the tool offers a straightforward user interface where users can load images, embed hidden messages, and retrieve previously concealed messages. The application handles various error cases, such as invalid file formats and messages that exceed size limitations.\n\nKey Features:\n- Steganography through pixel manipulation\n- Built with Win32 and GDI APIs\n- Simple interface for message hiding and extraction\n- Comprehensive error handling",
        "tags": "c++, gdi, winapi32",
        "link": "https://github.com/bellavee/MessageHider",
        "icon": "",
        "preview": ["1TiupWBRWYi_2q21M1dSQv.png", "2nDERQjeyeP_6ZWi6BXK5e.png", "3vQU2bGqPOr_7rl4kU5tfp.png"],
        "video": null,
        "finished": "2024-10-18",
        "last_updated": "2024-10-18",
        "on_live": false
      },
      {
        "id": "photo_gallery",
        "type": "tool",
        "color": "Kohane",
        "title": "Photo Gallery",
        "short_desc": "A desktop application for organizing and displaying image collections with customizable tags",
        "description": "Photo Gallery is a desktop application built with Python and CustomTkinter, designed specifically for managing and displaying large collections of images with a tagging system.\n\nKey Features:\n- Grid-based image display with thumbnail previews\n- Custom tagging system for image organization\n- Batch image operations (load, save, rename)\n- Tag-based filtering and searching\n- Clean, modern UI with dark theme\n- Customizable display settings\n\nThe tool provides an efficient way to manage large image libraries while maintaining a user-friendly interface for easy navigation and organization.",
        "tags": "python, custom-tkinter, desktop-application, image-management, tagging-system, gui",
        "link": "https://github.com/bellavee/python-scripts",
        "icon": "",
        "preview": ["gallery_min_zH1ASI1xZV.png"],
        "video": null,
        "finished": "2024-05-31",
        "last_updated": "2024-08-02",
        "on_live": false
      }
    ]
  }
}